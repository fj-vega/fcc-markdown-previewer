{"version":3,"sources":["api/defaultMarkdown.js","App.js","index.js"],"names":["defaultMarkdown","marked","setOptions","breaks","App","state","text","onChange","e","_this","setState","target","value","react_default","a","createElement","className","id","this","placeholder","dangerouslySetInnerHTML","__html","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"qRAAaA,EAAe,iyBCM5BC,IAAOC,WAAW,CAChBC,QAAQ,QAiCKC,6MA5BbC,MAAQ,CACNC,KAAMN,KAGRO,SAAW,SAAAC,GACTC,EAAKC,SAAS,CACZJ,KAAME,EAAEG,OAAOC,iFAKjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAIE,GAAG,SAAP,sBACAJ,EAAAC,EAAAC,cAAA,YACEE,GAAG,SACHL,MAAQM,KAAKb,MAAMC,KACnBC,SAAWW,KAAKX,SAChBY,YAAY,sBACdN,EAAAC,EAAAC,cAAA,OACEE,GAAG,UACHG,wBAA2B,CAAEC,OAAQpB,IAAOiB,KAAKb,MAAMC,iBAtB/CgB,IAAMC,WCLxBC,IAASC,OAAOZ,EAAAC,EAAAC,cAACW,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.27f1ad25.chunk.js","sourcesContent":["export const defaultMarkdown = `# React Markdown Previewer\n\n## Type your Markdown in the Editor!\n<br><br>\n\n### Main functionality\n\n- Preview window updates real time with markdown syntax\n- The editor has some predefined input on page load\n- BONUS: Use &lt;br&gt; for line breaks\n\n<br>\n\n\\`Is the syntax highlighting even working?\\`\n\\`\\`\\`javascript\nlet s = \"JavaScript syntax highlighting\";\nalert(s);\n\\`\\`\\`\n<br>\n\n> “If you are distressed by anything external, the pain is not due to the thing itself, but to your estimate of it; and this you have the power to revoke at any moment.”\n― Marcus Aurelius, Meditations \n<br>\n\n![react logo](https://i.postimg.cc/Bv9y8sBZ/react-logo.png)\n<br>\n\nCoded by **Stahlone**, 2019 for [freeCodeCamp](https://www.freecodecamp.org) Front End Libraries Challenges\n`;\n","import React from 'react';\nimport './App.css';\nimport marked from 'marked';\nimport {defaultMarkdown} from './api/defaultMarkdown';\n\n// Line breaks allowed \nmarked.setOptions({\n  breaks: true,\n});\n\n\nclass App extends React.Component {\n  state = {\n    text: defaultMarkdown\n  };\n\n  onChange = e => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <h1 id=\"title\">Markdown Previewer</h1>\n        <textarea \n          id=\"editor\" \n          value={ this.state.text } \n          onChange={ this.onChange } \n          placeholder=\"Enter Markdown...\" />\n        <div \n          id=\"preview\"\n          dangerouslySetInnerHTML = {{ __html: marked(this.state.text) }}>\n        </div> \n      </div>\n    );\n  };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}